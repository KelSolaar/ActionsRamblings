name: Continuous Integration

on: [push]

jobs:
  build-windows:
    strategy:
      matrix:
        os: [windows-2019]
        python-version: [2.7, 3.6, 3.7]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Environment Variables
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        set VIRTUAL_ENVIRONMENT=continuous-integration
        set PACKAGE=colour
        set PACKAGE_DEPENDENCIES=coverage coveralls flake8 imageio matplotlib mock nose pandas pyqt scipy six
        echo ::set-env name=PYTHON_VERSION::%PYTHON_VERSION%
        echo ::set-env name=VIRTUAL_ENVIRONMENT::%VIRTUAL_ENVIRONMENT%
        echo ::set-env name=PACKAGE::%PACKAGE%
        echo ::set-env name=PACKAGE_DEPENDENCIES::%PACKAGE_DEPENDENCIES%
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download Conda
      run: |
        IF "%PYTHON_VERSION:~0,1%"=="2" (certutil.exe -urlcache -split -f "http://repo.continuum.io/miniconda/Miniconda2-latest-Windows-x86_64.exe" Miniconda.exe)
        IF "%PYTHON_VERSION:~0,1%"=="3" (certutil.exe -urlcache -split -f "http://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe" Miniconda.exe)
    - name: Install Conda
      run: |
        Miniconda.exe /S /D=%USERPROFILE%\miniconda
        set PATH=%USERPROFILE%\miniconda\condabin;%PATH%
        echo ::set-env name=PATH::%PATH%
        echo Here!
        conda update --yes --quiet conda
    - name: Install Package Dependencies
      run: |
        echo There!
        conda create --yes --quiet -n %VIRTUAL_ENVIRONMENT% python=%PYTHON_VERSION% %PACKAGE_DEPENDENCIES%
        echo Boo!
        source activate %VIRTUAL_ENVIRONMENT%
        python -c "import imageio;imageio.plugins.freeimage.download()"
        tree %USERPROFILE%\miniconda
    - name: Lint with flake8
      run: |
        cd %GITHUB_WORKSPACE%
        echo A!
        call activate %VIRTUAL_ENVIRONMENT%
        echo B!
        where python
        flake8 %PACKAGE% --count --show-source --statistics
    - name: Test with nosetests
      run: |
        cd %GITHUB_WORKSPACE%
        echo A!
        set PYTHONWARNINGS=ignore
        call activate %VIRTUAL_ENVIRONMENT%
        echo B!
        where python        
        echo %cd%
        nosetests --nocapture --with-doctest --doctest-options=+ELLIPSIS --with-coverage --cover-package=%PACKAGE% %PACKAGE%
