name: Continuous Integration - Quality & Unit Tests

on: [push, pull_request]

jobs:
  continuous-integration-quality-unit-tests:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-22.04, windows-latest]
        python-version: [3.9, '3.10', 3.11]
        exclude:
          - os: windows-latest
            python-version: 3.8
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Environment Variables
      run: |
        echo "CI_PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
        echo "CI_PACKAGE=colour" >> $GITHUB_ENV
        echo "CI_SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "CI_OPENIMAGEIO_VERSION=2.4.5.0" >> $GITHUB_ENV
        echo "CI_OPENIMAGEIO_ARTIFACT=https://github.com/colour-science/artifacts/releases/download/OpenImageIO-Release-2.4.5.0/OpenImageIO-Release-2.4.5.0.zip" >> $GITHUB_ENV
        echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }}" >> $GITHUB_ENV
        echo "MPLBACKEND=AGG" >> $GITHUB_ENV
      shell: bash
    - name: Set up Python 3.9 for Pre-Commit
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get --yes install graphviz graphviz-dev libboost-all-dev libilmbase-dev libopenexr-dev libpng-dev libtiff5-dev
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME=$HOME/.poetry python3 -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      shell: bash
    - name: Install Package Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        poetry run python -m pip install --upgrade pip
        poetry install --extras "graphviz meshing optional plotting"
        poetry run python -c "import imageio;imageio.plugins.freeimage.download()"
      shell: bash
    - name: Install Package Dependencies (macOS & Windows)
      if: matrix.os == 'macOS-latest' || matrix.os == 'windows-latest'
      run: |
        poetry run python -m pip install --upgrade pip
        poetry install --extras "meshing optional plotting"
        poetry run python -c "import imageio;imageio.plugins.freeimage.download()"
      shell: bash
    - name: Install OpenImageIO (macOs)
      run: |
        brew install openimageio
        ls /opt/homebrew/Cellar/openimageio/*/lib/python*/site-packages/OpenImageIO/
        python -c "import sys;print(sys.path)"
    - name: Test with Pytest
      run: |
        ls
      shell: bash
